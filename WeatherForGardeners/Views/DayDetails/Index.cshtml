@model DayDetailsViewModel

@{
    ViewData["Title"] = $"Список дел на {Model.Date:dd.MM.yyyy}";
}

<h2>@ViewData["Title"]</h2>

@if (Model.Tasks.Any())
{
    <ul id="task-list">
        @foreach (var task in Model.Tasks)
        {
            <li>
                <strong>@task.Title</strong>
                <p>@task.Description</p>
                <label>
                    <input type="checkbox" class="task-status" data-task-id="@task.Id" @(task.IsCompleted ? "checked" : "") />
                    Выполнено
                </label>
                <button class="edit-button" data-task-id="@task.Id" data-task-title="@task.Title" data-task-description="@task.Description">Редактировать</button>
            </li>
        }
    </ul>
    <button id="save-button">Сохранить изменения</button>
}
else
{
    <p>Дел на этот день нет.</p>
}

<button id="add-task-button">Добавить задачу</button>

<!-- Модальное окно -->
<div id="edit-modal" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; border: 1px solid black; padding: 20px;">
    <h3 id="modal-title">Редактировать задачу</h3>
    <form id="edit-form">
        <input type="hidden" id="edit-task-id" />
        <label>
            Заголовок:
            <input type="text" id="edit-task-title" required />
        </label>
        <br />
        <label>
            Описание:
            <textarea id="edit-task-description" required></textarea>
        </label>
        <br />
        <button type="submit" id="save-task-button">Сохранить</button>
        <button type="button" id="cancel-edit">Отмена</button>
    </form>
</div>

@section Scripts {
    <script>
        // Сохранение изменений задач
        document.getElementById("save-button").addEventListener("click", function () {
            const checkboxes = document.querySelectorAll(".task-status");
            const updates = [];

            checkboxes.forEach(checkbox => {
                updates.push({
                    taskId: parseInt(checkbox.dataset.taskId, 10),
                    isCompleted: checkbox.checked
                });
            });

            fetch("/DayDetails/UpdateTaskStatus", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(updates)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Ошибка HTTP: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert("Изменения сохранены");
                        location.reload();
                    } else {
                        alert("Произошла ошибка при сохранении");
                    }
                })
                .catch(error => {
                    console.error("Ошибка соединения с сервером:", error);
                    alert("Ошибка соединения с сервером");
                });
        });

        // Логика открытия модального окна для редактирования
        document.querySelectorAll(".edit-button").forEach(button => {
            button.addEventListener("click", function () {
                const taskId = this.dataset.taskId;
                const taskTitle = this.dataset.taskTitle;
                const taskDescription = this.dataset.taskDescription;

                document.getElementById("modal-title").innerText = "Редактировать задачу";
                document.getElementById("edit-task-id").value = taskId;
                document.getElementById("edit-task-title").value = taskTitle;
                document.getElementById("edit-task-description").value = taskDescription;

                document.getElementById("edit-modal").style.display = "block";
            });
        });

        // Логика открытия модального окна для добавления задачи
        document.getElementById("add-task-button").addEventListener("click", function () {
            document.getElementById("modal-title").innerText = "Добавить задачу";
            document.getElementById("edit-task-id").value = ""; // Очищаем поле ID
            document.getElementById("edit-task-title").value = "";
            document.getElementById("edit-task-description").value = "";

            document.getElementById("edit-modal").style.display = "block";
        });

        // Отмена редактирования
        document.getElementById("cancel-edit").addEventListener("click", function () {
            document.getElementById("edit-modal").style.display = "none";
        });

        // Сохранение изменений или добавление новой задачи
        document.getElementById("edit-form").addEventListener("submit", function (e) {
            e.preventDefault();

            const taskId = document.getElementById("edit-task-id").value;
            const taskTitle = document.getElementById("edit-task-title").value;
            const taskDescription = document.getElementById("edit-task-description").value;

            const url = taskId ? "/DayDetails/EditTask" : "/DayDetails/AddTask";
            const body = taskId
                ? { taskId: parseInt(taskId, 10), title: taskTitle, description: taskDescription }
                : { title: taskTitle, description: taskDescription };

            fetch(url, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify(body)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Ошибка HTTP: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert(taskId ? "Задача обновлена" : "Задача добавлена");
                        location.reload();
                    } else {
                        alert("Ошибка сохранения");
                    }
                })
                .catch(error => {
                    console.error("Ошибка:", error);
                    alert("Ошибка соединения с сервером");
                });
        });
    </script>
}
